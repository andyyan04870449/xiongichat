# 生產環境 Dockerfile - 多階段建構
FROM python:3.11-slim as builder

# 設定工作目錄
WORKDIR /app

# 安裝建構依賴
RUN apt-get update && apt-get install -y \
    gcc \
    && rm -rf /var/lib/apt/lists/*

# 複製並安裝 Python 套件
COPY requirements.txt .
RUN pip install --user --no-cache-dir -r requirements.txt

# 最終階段
FROM python:3.11-slim

# 設定環境變數
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PATH=/home/appuser/.local/bin:$PATH

# 安裝運行時依賴
RUN apt-get update && apt-get install -y \
    postgresql-client \
    curl \
    && rm -rf /var/lib/apt/lists/*

# 建立非 root 使用者
RUN useradd -m -u 1000 appuser

# 設定工作目錄
WORKDIR /app

# 複製 Python 套件
COPY --from=builder --chown=appuser:appuser /root/.local /home/appuser/.local

# 複製應用程式碼
COPY --chown=appuser:appuser app/ ./app/
COPY --chown=appuser:appuser init.sql ./

# 切換到非 root 使用者
USER appuser

# 健康檢查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# 暴露埠號
EXPOSE 8000

# 生產環境啟動（不使用 reload）
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]